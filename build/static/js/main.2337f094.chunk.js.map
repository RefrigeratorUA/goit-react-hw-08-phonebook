{"version":3,"sources":["components/PhonebookList/PhonebookList.module.css","redux/counter/action-types.js","redux/counter/counter-reducers.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/store.js","components/Section/Section.js","components/Logo/Logo.js","components/AppBar/AppBar.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Loader/Loader.js","components/PhonebookListItem/PhonebookListItem.js","components/PhonebookList/PhonebookList.js","App.js","index.js"],"names":["module","exports","combineReducers","value","state","type","payload","actionsTypes","step","axios","defaults","baseURL","dispatch","a","fetchContactsRequest","get","data","fetchContactsSuccess","fetchContactsError","name","number","item","addContactRequest","post","addContactSuccess","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getFilter","contacts","filter","getAllContacts","items","getLoading","loading","getError","error","getFilteredContacts","createSelector","toLowerCase","includes","createAction","filterContacts","itemsReducer","createReducer","_","Number","filterReducer","loadingReducer","errorReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","contactsReducer","counter","counterReducer","store","configureStore","reducer","devTools","process","Section","title","children","className","Logo","AppBar","CSSTransition","in","appear","classNames","timeout","unmountOnExit","Notification","errorMessage","this","props","onView","message","setState","setTimeout","prevProps","prevState","Component","ContactForm","handleChange","event","target","handleSubmit","preventDefault","onAddContact","some","showNotification","isShow","onSubmit","onChange","disabled","connect","contactsSelectors","contactsOperations","onFilterChange","Loader","color","visible","height","width","PhonebookListItem","onDelete","onClick","PhonebookList","fetchContacts","isLoading","length","TransitionGroup","component","map","styles","App","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.2337f094.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"PhonebookList_enter__3Kimb\",\"enterActive\":\"PhonebookList_enterActive__1KyOv\",\"exit\":\"PhonebookList_exit__3tO4t\",\"exitActive\":\"PhonebookList_exitActive__3XIs9\"};","const INCREMENT = 'counter/Increment';\nconst DECREMENT = 'counter/Decrement';\n// eslint-disable-next-line\nexport default { INCREMENT, DECREMENT };\n","import { combineReducers } from 'redux';\nimport actionsTypes from './action-types';\n\nconst valueReducer = (state = 10, { type, payload }) => {\n  switch (type) {\n    case actionsTypes.INCREMENT:\n      return state + payload;\n    case actionsTypes.DECREMENT:\n      return state - payload;\n    default:\n      return state;\n  }\n};\nconst stepReducer = (state = 5, action) => state;\n\nexport default combineReducers({\n  value: valueReducer,\n  step: stepReducer,\n});\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from '../contacts';\n\naxios.defaults.baseURL = 'http://localhost:7777';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const item = { name, number };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', item);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\n// eslint-disable-next-line\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = ({ contacts: { loading } }) => loading;\n\nconst getFilter = ({ contacts: { filter } }) => filter;\n\nconst getError = ({ contacts: { error } }) => error;\n\nconst getAllContacts = ({ contacts: { items } }) => items;\n\nconst getFilteredContacts = createSelector([getAllContacts, getFilter], (items, filter) =>\n  items.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase())),\n);\n\n// eslint-disable-next-line\nexport default {\n  getLoading,\n  getFilter,\n  getError,\n  getAllContacts,\n  getFilteredContacts,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContacts = createAction('contact/ChangeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from '../contacts';\n\nconst itemsReducer = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== Number(payload)),\n});\n\nconst filterReducer = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst loadingReducer = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst errorReducer = createReducer(null, {\n  [fetchContactsRequest]: () => '',\n  [fetchContactsError]: () => 'Ошибка получения контактов из БД',\n  [addContactRequest]: () => '',\n  [addContactError]: () => 'Ошибка записи контакта в БД',\n  [deleteContactRequest]: () => '',\n  [deleteContactError]: () => 'Ошибка удаления контакта из БД',\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n","import { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\nimport counterReducer from './counter/counter-reducers';\nimport { contactsReducer } from './contacts';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  counter: counterReducer,\n});\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\n// const persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default store;\n","import PropTypes from 'prop-types';\nimport './Section.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className=\"section\">\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import './Logo.css';\n\nconst Logo = () => {\n  return <h1 className=\"logo\">Phonebook</h1>;\n};\n\nexport default Logo;\n","import { CSSTransition } from 'react-transition-group';\nimport Logo from '../Logo';\nimport './AppBar.css';\n\nconst AppBar = () => {\n  return (\n    <header className=\"AppBar-wrapper\">\n      <CSSTransition in={true} appear={true} classNames=\"AppBar-logo\" timeout={500} unmountOnExit>\n        <Logo />\n      </CSSTransition>\n    </header>\n  );\n};\n\nexport default AppBar;\n","import { Component } from 'react';\n\nclass Notification extends Component {\n  state = {\n    errorMessage: '',\n  };\n\n  componentDidMount() {\n    const { onView, message } = this.props;\n    this.setState({ errorMessage: message });\n    setTimeout(() => onView(''), 2000);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { onView, message } = this.props;\n    const { errorMessage } = this.state;\n    if (message && message !== errorMessage) {\n      this.setState({ errorMessage: message });\n      return onView('');\n    }\n  }\n\n  render() {\n    const { errorMessage } = this.state;\n    return <div className=\"alert\">{errorMessage}</div>;\n  }\n}\n\nexport default Notification;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport Notification from '../Notification';\nimport '../Notification/Notification.css';\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    errorMessage: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const { onAddContact, items } = this.props;\n\n    if (!name) return this.showNotification('Please enter contact name');\n    if (!number) return this.showNotification('Please enter contact number');\n    if (items.some(item => item.name === name)) {\n      this.setState({ name: '', number: '' });\n      return this.showNotification(`${name} is already in contacts`);\n    }\n\n    onAddContact(name, number);\n    this.setState({ name: '', number: '' });\n  };\n\n  showNotification = errorMessage => {\n    this.setState({ errorMessage });\n  };\n\n  render() {\n    const { name, number, errorMessage } = this.state;\n    const isShow = errorMessage ? true : false; // Консоль ругается, еслт CSSTransition in !== boolean\n    return (\n      <>\n        <div className=\"Notification-wrapper\">\n          <CSSTransition in={isShow} classNames=\"Notification\" timeout={250} unmountOnExit>\n            <Notification onView={this.showNotification} message={errorMessage} />\n          </CSSTransition>\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            ></input>\n          </label>\n          <label>\n            Number\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            ></input>\n          </label>\n          <br />\n          <button className=\"btn\" type=\"submit\" disabled={(!name && !number) || errorMessage}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ items: contactsSelectors.getAllContacts(state) });\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: (name, number) => dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts';\n\nconst Filter = ({ onFilterChange }) => {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input className=\"input\" type=\"text\" onChange={onFilterChange}></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onFilterChange: event => dispatch(filterContacts(event.target.value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport LoaderSpinner from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Loader = ({ type = 'ThreeDots', color = '#000', className = 'loader' }) => {\n  return (\n    <LoaderSpinner\n      visible=\"true\"\n      type={type}\n      color={color}\n      height={50}\n      width={50}\n      // timeout={3000} //3 secs\n      className={className}\n    />\n  );\n};\n\nLoader.propTypes = {\n  type: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default Loader;\n","// import styles from './PhonebookListItem.module.css';\n\nconst PhonebookListItem = ({ name, number, id, onDelete }) => {\n  return (\n    <li className=\"list-item\">\n      {`${name}: `}\n      <span>{number}</span>\n      <button type=\"button\" id={id} onClick={event => onDelete(event.target.id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default PhonebookListItem;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Filter from '../Filter';\nimport Loader from '../Loader';\nimport Notification from '../Notification';\nimport PhonebookListItem from '../PhonebookListItem';\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\nimport styles from './PhonebookList.module.css';\n\nclass PhonebookList extends Component {\n  state = {\n    errorMessage: '',\n  };\n  componentDidMount() {\n    return this.props.fetchContacts();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { errorMessage } = prevState;\n    const { error } = this.props;\n    if (error !== errorMessage) this.showNotification(error);\n  }\n\n  showNotification = errorMessage => {\n    this.setState({ errorMessage });\n  };\n\n  render() {\n    const { contacts, filter, onDelete, isLoading, error } = this.props;\n    const { errorMessage } = this.state;\n    const isShow = errorMessage ? true : false; // Консоль ругается, еслт CSSTransition in !== boolean\n    return (\n      <>\n        <div className=\"Notification-wrapper\">\n          <CSSTransition in={isShow} classNames=\"Notification\" timeout={250} unmountOnExit>\n            <Notification onView={this.showNotification} message={error} />\n          </CSSTransition>\n        </div>\n        {isLoading && <Loader />}\n        {(contacts.length > 1 || filter) && <Filter />}\n\n        <TransitionGroup component=\"ul\" className=\"list\">\n          {contacts.map(({ name, id, number }) => (\n            <CSSTransition key={id} timeout={250} classNames={styles}>\n              <PhonebookListItem name={name} number={number} id={id} onDelete={onDelete} />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </>\n    );\n  }\n}\n\nPhonebookList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }),\n  ),\n  onDelete: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getFilteredContacts(state),\n  filter: contactsSelectors.getFilter(state),\n  isLoading: contactsSelectors.getLoading(state),\n  error: contactsSelectors.getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookList);\n","import Section from './components/Section';\nimport AppBar from './components/AppBar';\nimport ContactForm from './components/ContactForm';\nimport PhonebookList from './components/PhonebookList/';\n\nconst App = () => {\n  return (\n    <Section>\n      <AppBar />\n      <ContactForm />\n      <PhonebookList />\n    </Section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport App from './App';\n// import { PersistGate } from 'redux-persist/integration/react';\n// import Loader from './components/Loader';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={<Loader className=\"pre-loader\" />} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}