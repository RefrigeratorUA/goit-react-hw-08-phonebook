{"version":3,"sources":["components/PhonebookList/PhonebookList.module.css","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/Filter/Filter.js","components/PhonebookListItem/PhonebookListItem.js","components/PhonebookList/PhonebookList.js","components/ContactForm/ContactForm.js","views/ContactsView.js","components/Notification/Notification.js"],"names":["module","exports","getChildMapping","children","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","this","self","ReferenceError","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","React","createElement","TransitionGroupContext","Provider","value","propTypes","defaultProps","connect","dispatch","onFilterChange","event","filterContacts","target","className","type","onChange","PhonebookListItem","name","number","id","onDelete","onClick","PhonebookList","fetchContacts","contacts","filter","isLoading","error","onClearError","CSSTransition","classNames","timeout","unmountOnExit","Notification","onView","message","Loader","animation","styles","contactsSelectors","getFilteredContacts","getFilter","getLoading","getError","contactsOperations","deleteContact","onClearErrorMessage","ContactForm","errorMessage","handleChange","handleSubmit","preventDefault","onAddContact","items","some","item","showNotification","onSubmit","disabled","getAllContacts","addContact","ContactsView","setTimeout","prevProps","prevState"],"mappings":"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","file":"static/js/contacts-view.a7aaf5fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"PhonebookList_enter__3Kimb\",\"enterActive\":\"PhonebookList_enterActive__1KyOv\",\"exit\":\"PhonebookList_exit__3tO4t\",\"exitActive\":\"PhonebookList_exitActive__3XIs9\"};","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts';\n\nconst Filter = ({ onFilterChange }) => {\n  return (\n    <div className=\"filter\">\n      <p>Find contacts by name</p>\n      <input className=\"input\" type=\"text\" onChange={onFilterChange}></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onFilterChange: event => dispatch(filterContacts(event.target.value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","// import styles from './PhonebookListItem.module.css';\n\nconst PhonebookListItem = ({ name, number, id, onDelete }) => {\n  return (\n    <li className=\"list-item\">\n      {`${name}: `}\n      <span>{number}</span>\n      <button type=\"button\" id={id} onClick={event => onDelete(event.target.id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default PhonebookListItem;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Filter from '../Filter';\nimport Notification from '../Notification';\nimport PhonebookListItem from '../PhonebookListItem';\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\nimport styles from './PhonebookList.module.css';\nimport Loader from '../Loader';\n\nclass PhonebookList extends Component {\n  componentDidMount() {\n    return this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, filter, onDelete, isLoading, error, onClearError } = this.props;\n    return (\n      <>\n        <div className=\"Notification-wrapper\">\n          <CSSTransition in={!!error} classNames=\"Notification\" timeout={250} unmountOnExit>\n            <Notification onView={onClearError} message={error} />\n          </CSSTransition>\n        </div>\n        {isLoading && <Loader animation={'border'} />}\n        {(contacts.length > 1 || filter) && <Filter />}\n\n        <TransitionGroup component=\"ul\" className=\"list\">\n          {contacts.map(({ name, id, number }) => (\n            <CSSTransition key={id} timeout={250} classNames={styles}>\n              <PhonebookListItem name={name} number={number} id={id} onDelete={onDelete} />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </>\n    );\n  }\n}\n\nPhonebookList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }),\n  ),\n  onDelete: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getFilteredContacts(state),\n  filter: contactsSelectors.getFilter(state),\n  isLoading: contactsSelectors.getLoading(state),\n  error: contactsSelectors.getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\n  onClearError: () => dispatch(contactsOperations.onClearErrorMessage()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookList);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport Notification from '../Notification';\nimport '../Notification/Notification.css';\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    errorMessage: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const { onAddContact, items } = this.props;\n\n    if (!name) return this.showNotification('Please enter contact name');\n    if (!number) return this.showNotification('Please enter contact number');\n    if (items.some(item => item.name === name)) {\n      this.setState({ name: '', number: '' });\n      return this.showNotification(`${name} is already in contacts`);\n    }\n\n    onAddContact(name, number);\n    this.setState({ name: '', number: '' });\n  };\n\n  showNotification = errorMessage => {\n    this.setState({ errorMessage });\n  };\n\n  render() {\n    const { name, number, errorMessage } = this.state;\n    return (\n      <>\n        <div className=\"Notification-wrapper\">\n          <CSSTransition in={!!errorMessage} classNames=\"Notification\" timeout={250} unmountOnExit>\n            <Notification onView={this.showNotification} message={errorMessage} />\n          </CSSTransition>\n        </div>\n\n        <form onSubmit={this.handleSubmit} className=\"form-addContact\">\n          <label>\n            Name\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            ></input>\n          </label>\n          <label>\n            Number\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            ></input>\n          </label>\n          <br />\n          <button\n            className=\"btn-phonebook\"\n            type=\"submit\"\n            disabled={(!name && !number) || errorMessage}\n          >\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ items: contactsSelectors.getAllContacts(state) });\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: (name, number) => dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PhonebookList from '../components/PhonebookList';\nimport ContactForm from '../components/ContactForm';\n\nconst ContactsView = () => {\n  return (\n    <>\n      <ContactForm />\n      <PhonebookList />\n    </>\n  );\n};\n\nexport default ContactsView;\n","import { Component } from 'react';\n\nclass Notification extends Component {\n  state = {\n    errorMessage: '',\n  };\n\n  componentDidMount() {\n    const { onView, message } = this.props;\n    this.setState({ errorMessage: message });\n    setTimeout(() => onView(''), 2000);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { onView, message } = this.props;\n    const { errorMessage } = this.state;\n    if (message && message !== errorMessage) {\n      this.setState({ errorMessage: message });\n      return onView('');\n    }\n  }\n\n  render() {\n    const { errorMessage } = this.state;\n    return <div className=\"alert\">{errorMessage}</div>;\n  }\n}\n\nexport default Notification;\n"],"sourceRoot":""}