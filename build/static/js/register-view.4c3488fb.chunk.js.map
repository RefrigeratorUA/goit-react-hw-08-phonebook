{"version":3,"sources":["components/RegistrationForm/RegistrationForm.js","views/RegisterView.js","components/Notification/Notification.js"],"names":["RegistrationForm","state","name","email","password","errorMessage","handleChange","event","target","value","setState","handleSubmit","preventDefault","onRegister","props","showNotification","prevProps","prevState","this","error","onClearError","isAuthLoading","className","CSSTransition","in","classNames","timeout","unmountOnExit","Notification","onView","message","Loader","onSubmit","type","onChange","disabled","Component","mapDispatchToProps","authOperations","register","onClearErrorMessage","connect","authSelectors","getAuthLoading","getAuthError","RegisterView","setTimeout"],"mappings":"sRAQMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,aAAc,I,EAWhBC,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBN,EADc,EACdA,KAAMO,EADQ,EACRA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBADgB,MAEY,EAAKX,MAA/BC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MAAOC,EAFC,EAEDA,SACbS,EAAe,EAAKC,MAApBD,WAER,OAAKX,EACAC,EACAC,GAELS,EAAW,CAAEX,OAAMC,QAAOC,kBAC1B,EAAKM,SAAS,CAAER,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAHzB,EAAKW,iBAAiB,yBADzB,EAAKA,iBAAiB,sBADvB,EAAKA,iBAAiB,2B,EAQ1CA,iBAAmB,SAAAV,GACjB,EAAKK,SAAS,CAAEL,kB,wDA3BlB,SAAmBW,EAAWC,GAAY,IAAD,EACPC,KAAKJ,MAA7BK,EAD+B,EAC/BA,MAAOC,EADwB,EACxBA,aACXD,IACFD,KAAKH,iBAAiBI,GACtBC,O,oBA0BJ,WAAU,IAAD,EACyCF,KAAKjB,MAA7CC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAAUC,EADxB,EACwBA,aACvBgB,EAAkBH,KAAKJ,MAAvBO,cACR,OACE,qCACE,qBAAKC,UAAU,uBAAf,SACE,cAACC,EAAA,EAAD,CAAeC,KAAMnB,EAAcoB,WAAW,eAAeC,QAAS,IAAKC,eAAa,EAAxF,SACE,cAACC,EAAA,EAAD,CAAcC,OAAQX,KAAKH,iBAAkBe,QAASzB,QAIzDgB,EACC,cAACU,EAAA,EAAD,IAEA,uBAAMC,SAAUd,KAAKP,aAArB,UACE,yCAEE,uBACEW,UAAU,QACVW,KAAK,OACL/B,KAAK,OACLO,MAAOP,EACPgC,SAAUhB,KAAKZ,kBAGnB,0CAEE,uBACEgB,UAAU,QACVW,KAAK,QACL/B,KAAK,QACLO,MAAON,EACP+B,SAAUhB,KAAKZ,kBAGnB,6CAEE,uBACEgB,UAAU,QACVW,KAAK,WACL/B,KAAK,WACLO,MAAOL,EACP8B,SAAUhB,KAAKZ,kBAGnB,uBACA,wBACEgB,UAAU,gBACVW,KAAK,SACLE,UAAYjC,IAASC,IAAUC,KAAeC,EAHhD,gC,GApFmB+B,aAyGzBC,EAAqB,CACzBxB,WAAYyB,IAAeC,SAC3BnB,aAAckB,IAAeE,qBAGhBC,eAVS,SAAAxC,GAAK,MAAK,CAChCoB,cAAeqB,IAAcC,eAAe1C,GAC5CkB,MAAOuB,IAAcE,aAAa3C,MAQIoC,EAAzBI,CAA6CzC,GC3G7C6C,UATM,WACnB,OACE,qCACE,uDACA,cAAC,EAAD,S,oHCqBSjB,E,4MAxBb3B,MAAQ,CACNI,aAAc,I,uDAGhB,WAAqB,IAAD,EACUa,KAAKJ,MAAzBe,EADU,EACVA,OAAQC,EADE,EACFA,QAChBZ,KAAKR,SAAS,CAAEL,aAAcyB,IAC9BgB,YAAW,kBAAMjB,EAAO,MAAK,O,gCAE/B,SAAmBb,EAAWC,GAAY,IAAD,EACXC,KAAKJ,MAAzBe,EAD+B,EAC/BA,OAAQC,EADuB,EACvBA,QACRzB,EAAiBa,KAAKjB,MAAtBI,aACR,GAAIyB,GAAWA,IAAYzB,EAEzB,OADAa,KAAKR,SAAS,CAAEL,aAAcyB,IACvBD,EAAO,M,oBAIlB,WAAU,IACAxB,EAAiBa,KAAKjB,MAAtBI,aACR,OAAO,qBAAKiB,UAAU,QAAf,SAAwBjB,Q,GArBR+B","file":"static/js/register-view.4c3488fb.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport Notification from '../Notification';\nimport '../Notification/Notification.css';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport Loader from '../Loader';\n\nclass RegistrationForm extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    errorMessage: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { error, onClearError } = this.props;\n    if (error) {\n      this.showNotification(error);\n      onClearError();\n    }\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, email, password } = this.state;\n    const { onRegister } = this.props;\n\n    if (!name) return this.showNotification('Please enter user name');\n    if (!email) return this.showNotification('Please enter email');\n    if (!password) return this.showNotification('Please enter password');\n\n    onRegister({ name, email, password });\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  showNotification = errorMessage => {\n    this.setState({ errorMessage });\n  };\n\n  render() {\n    const { name, email, password, errorMessage } = this.state;\n    const { isAuthLoading } = this.props;\n    return (\n      <>\n        <div className=\"Notification-wrapper\">\n          <CSSTransition in={!!errorMessage} classNames=\"Notification\" timeout={250} unmountOnExit>\n            <Notification onView={this.showNotification} message={errorMessage} />\n          </CSSTransition>\n        </div>\n\n        {isAuthLoading ? (\n          <Loader />\n        ) : (\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Name\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={this.handleChange}\n              ></input>\n            </label>\n            <label>\n              Email\n              <input\n                className=\"input\"\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={this.handleChange}\n              ></input>\n            </label>\n            <label>\n              Password\n              <input\n                className=\"input\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={this.handleChange}\n              ></input>\n            </label>\n            <br />\n            <button\n              className=\"btn-phonebook\"\n              type=\"submit\"\n              disabled={(!name && !email && !password) || !!errorMessage}\n            >\n              Register\n            </button>\n          </form>\n        )}\n      </>\n    );\n  }\n}\n\n// const mapStateToProps = state => ({ items: contactsSelectors.getAllContacts(state) });\n\nconst mapStateToProps = state => ({\n  isAuthLoading: authSelectors.getAuthLoading(state),\n  error: authSelectors.getAuthError(state),\n});\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n  onClearError: authOperations.onClearErrorMessage,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n","import RegistrationForm from '../components/RegistrationForm';\n\nconst RegisterView = () => {\n  return (\n    <>\n      <h1>Registration new user</h1>\n      <RegistrationForm />\n    </>\n  );\n};\n\nexport default RegisterView;\n","import { Component } from 'react';\n\nclass Notification extends Component {\n  state = {\n    errorMessage: '',\n  };\n\n  componentDidMount() {\n    const { onView, message } = this.props;\n    this.setState({ errorMessage: message });\n    setTimeout(() => onView(''), 2000);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { onView, message } = this.props;\n    const { errorMessage } = this.state;\n    if (message && message !== errorMessage) {\n      this.setState({ errorMessage: message });\n      return onView('');\n    }\n  }\n\n  render() {\n    const { errorMessage } = this.state;\n    return <div className=\"alert\">{errorMessage}</div>;\n  }\n}\n\nexport default Notification;\n"],"sourceRoot":""}